{
	"info": {
		"name": "Maximizer.Web.Data",
		"_postman_id": "533eac46-378a-537b-0f12-31167610d795",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Authenticate (on-premise)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "47aec55b-eae9-4327-a079-f0bbcc2e59bb",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ec327f10-b508-47b4-8ba1-857142b02222",
								"type": "text/javascript",
								"exec": [
									"if(!pm.environment.get(\"Database\")) {",
									"    console.log(\"The Database environment variable is required.\");",
									"}",
									"if(!pm.environment.get(\"UID\")) {",
									"    console.log(\"The UID environment variable is required.\");",
									"}",
									"if(!pm.environment.get(\"Password\")) {",
									"    console.log(\"The Password environment variable is required.\");",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Database\":\"{{Database}}\",\r\n   \"UID\":\"{{UID}}\",\r\n   \"Password\":\"{{Password}}\"\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/Authenticate",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"Authenticate"
							]
						},
						"description": "Use the `Authenticate` method to obtain an API access token that you can use in subsequent requests."
					},
					"response": []
				},
				{
					"name": "Authenticate (CRM Live)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "47aec55b-eae9-4327-a079-f0bbcc2e59bb",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3535abfc-3890-4034-bc29-c35f046ffa70",
								"type": "text/javascript",
								"exec": [
									"if(!pm.environment.get(\"Database\")) {",
									"    console.log(\"The Database environment variable is required.\");",
									"}",
									"if(!pm.environment.get(\"UID\")) {",
									"    console.log(\"The UID environment variable is required.\");",
									"}",
									"if(!pm.environment.get(\"Password\")) {",
									"    console.log(\"The Password environment variable is required.\");",
									"}",
									"if(!pm.environment.get(\"VendorId\")) {",
									"    console.log(\"The VendorId environment variable is required.\");",
									"}",
									"if(!pm.environment.get(\"AppKey\")) {",
									"    console.log(\"The AppKey environment variable is required.\");",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Database\":\"{{Database}}\",\r\n   \"UID\":\"{{UID}}\",\r\n   \"Password\":\"{{Password}}\",\r\n   \"VendorId\":\"{{VendorId}}\",\r\n   \"AppKey\":\"{{AppKey}}\"\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/Authenticate",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"Authenticate"
							]
						},
						"description": "Use the `Authenticate` method to obtain an API access token that you can use in subsequent requests."
					},
					"response": []
				},
				{
					"name": "TokenValid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0af55e07-95cb-4535-8404-5a8e867bca6f",
								"type": "text/javascript",
								"exec": [
									"if(!pm.environment.get(\"Token\")) {",
									"    console.log(\"The Token environment variable is required.\");",
									"}"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a10fa3d1-33f5-464c-a3f3-bdd879cc00bb",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Token\":\"{{Token}}\"\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/TokenValid",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"TokenValid"
							]
						},
						"description": "Use the `TokenValid` method to check whether or not your API access token is valid before making subsequent requests.\n\nNOTE: You must run the `Authenticate` request before running this one so that the `Token` environment variable is set."
					},
					"response": []
				}
			]
		},
		{
			"name": "System",
			"item": [
				{
					"name": "GetSessionInfo",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "93b127d3-a765-46ad-9170-610bbbec27a3",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a10fa3d1-33f5-464c-a3f3-bdd879cc00bb",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Token\":\"{{Token}}\",\r\n    \"User\":{\r\n        \"Key\":{\r\n            \"Value\":1,\r\n            \"UID\":1\r\n        },\r\n        \"DisplayName\":1\r\n    },\r\n    \"AddressBook\":{\r\n        \"UDBID\":1,\r\n        \"Database\":1,\r\n        \"DisplayValue\":1\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/GetSessionInfo",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"GetSessionInfo"
							]
						},
						"description": "Use the `GetSessionInfo` method to retrieve information about the current user and Address Book database based on the token supplied in the request."
					},
					"response": []
				},
				{
					"name": "GetSystemInfo",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f3a00a69-b335-4c59-becc-20b0ad29e1cf",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a10fa3d1-33f5-464c-a3f3-bdd879cc00bb",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/GetSystemInfo",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"GetSystemInfo"
							]
						},
						"description": "Use the `GetSystemInfo` method to get information about the system, including the current API version and the versions of API components.\n\nNOTE: The `GetSystemInfo` method is un-authenticated, so you don't need to supply a token when calling it."
					},
					"response": []
				}
			]
		},
		{
			"name": "AbEntry",
			"item": [
				{
					"name": "AbEntryRead (Simple)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d5c830d2-115c-44ef-8ef3-4b0832019a18",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"AbEntry\":{\r\n      \"Criteria\":{\r\n         \"SearchQuery\":{\r\n            \"CompanyName\":{\r\n               \"$LIKE\":\"%\"\r\n            }\r\n         }\r\n      },\r\n      \"Scope\":{\r\n         \"Fields\":{\r\n            \"Key\":1,\r\n            \"Type\":1,\r\n            \"CompanyName\":1,\r\n            \"MrMs\":1,\r\n            \"FirstName\":1,\r\n            \"MiddleName\":1,\r\n            \"LastName\":1,\r\n            \"FullName\":1,\r\n            \"Position\":1,\r\n            \"Salutation\":1,\r\n            \"Department\":1,\r\n            \"Division\":1,\r\n            \"Phone\":1,\r\n            \"Phone1\":1,\r\n            \"Phone2\":1,\r\n            \"Phone3\":1,\r\n            \"Phone4\":1,\r\n            \"Email\":1,\r\n            \"Email1\":1,\r\n            \"Email2\":1,\r\n            \"Email3\":1,\r\n            \"ParentKey\":1,\r\n            \"Address\":1,\r\n            \"AccountManager\":1,\r\n            \"Territory\":1,\r\n            \"TerritoryStatus\":1,\r\n            \"Lead\":1,\r\n            \"SecAccess\":1,\r\n            \"SecStatus\":1,\r\n            \"PartnerKey\":1,\r\n            \"Partner\":1,\r\n            \"Creator\":1,\r\n            \"CreationDate\":1,\r\n            \"ModifiedBy\":1,\r\n            \"LastModifyDate\":1,\r\n            \"WebSite\":1,\r\n            \"Category\":1,\r\n            \"DoNotSolicitBy\":1,\r\n            \"LastContactDate\":1,\r\n            \"Udf/$TYPEID(58851)\":1,\r\n            \"Udf/VWRmRGVmaW5pdGlvbgk2MDAzMAkw\":1,\r\n            \"Udf/$NAME(Do not solicit by)\":1\r\n         }\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/AbEntryRead",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"AbEntryRead"
							]
						},
						"description": "Use the `AbEntryRead` method to search for Address Book entries in the database."
					},
					"response": []
				},
				{
					"name": "AbEntryRead (Detailed)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d5c830d2-115c-44ef-8ef3-4b0832019a18",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"AbEntry\":{\r\n      \"Criteria\":{\r\n         \"SearchQuery\":{\r\n            \"$AND\":[\r\n               {\r\n                  \"CompanyName\":{\r\n                     \"$LIKE\":\"%\"\r\n                  }\r\n               },\r\n               {\r\n                  \"Type\":{\r\n                     \"$EQ\":\"Contact\"\r\n                  }\r\n               }\r\n            ]\r\n         }\r\n      },\r\n      \"Scope\":{\r\n         \"Fields\":{\r\n            \"Key\":{\r\n               \"Value\":1,\r\n               \"ID\":1,\r\n               \"Number\":1,\r\n               \"EntityType\":1\r\n            },\r\n            \"Type\":1,\r\n            \"CompanyName\":1,\r\n            \"MrMs\":1,\r\n            \"FirstName\":1,\r\n            \"MiddleName\":1,\r\n            \"LastName\":1,\r\n            \"FullName\":1,\r\n            \"Position\":1,\r\n            \"Salutation\":1,\r\n            \"Department\":1,\r\n            \"Division\":1,\r\n            \"Phone\":{\r\n               \"Default\":1,\r\n               \"Description\":1,\r\n               \"Number\":1,\r\n               \"Extension\":1\r\n            },\r\n            \"Phone1\":{\r\n               \"Default\":1,\r\n               \"Description\":1,\r\n               \"Number\":1,\r\n               \"Extension\":1\r\n            },\r\n            \"Phone2\":{\r\n               \"Default\":1,\r\n               \"Description\":1,\r\n               \"Number\":1,\r\n               \"Extension\":1\r\n            },\r\n            \"Phone3\":{\r\n               \"Default\":1,\r\n               \"Description\":1,\r\n               \"Number\":1,\r\n               \"Extension\":1\r\n            },\r\n            \"Phone4\":{\r\n               \"Default\":1,\r\n               \"Description\":1,\r\n               \"Number\":1,\r\n               \"Extension\":1\r\n            },\r\n            \"Email\":{\r\n               \"Default\":1,\r\n               \"Description\":1,\r\n               \"Address\":1\r\n            },\r\n            \"Email1\":{\r\n               \"Default\":1,\r\n               \"Description\":1,\r\n               \"Address\":1\r\n            },\r\n            \"Email2\":{\r\n               \"Default\":1,\r\n               \"Description\":1,\r\n               \"Address\":1\r\n            },\r\n            \"Email3\":{\r\n               \"Default\":1,\r\n               \"Description\":1,\r\n               \"Address\":1\r\n            },\r\n            \"ParentKey\":{\r\n               \"Value\":1,\r\n               \"ID\":1,\r\n               \"Number\":1,\r\n               \"EntityType\":1\r\n            },\r\n            \"Address\":{\r\n               \"Key\":1,\r\n               \"Description\":1,\r\n               \"AddressLine1\":1,\r\n               \"AddressLine2\":1,\r\n               \"City\":1,\r\n               \"Country\":1,\r\n               \"StateProvince\":1,\r\n               \"ZipCode\":1,\r\n               \"Default\":1,\r\n               \"ParentKey\":1\r\n            },\r\n            \"AccountManager\":[\r\n               {\r\n                  \"Key\":{\r\n                     \"Value\":1,\r\n                     \"Uid\":1\r\n                  },\r\n                  \"DisplayValue\":1\r\n               }\r\n            ],\r\n            \"Territory\":{\r\n               \"Key\":1,\r\n               \"Name\":1,\r\n               \"AccountManager\":1,\r\n               \"CreationDate\":1,\r\n               \"Creator\":1,\r\n               \"LastModifyDate\":1,\r\n               \"ModifiedBy\":1\r\n            },\r\n            \"TerritoryStatus\":1,\r\n            \"Lead\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"SecAccess\":{\r\n               \"Write\":[\r\n                  {\r\n                     \"Key\":{\r\n                        \"Value\":1,\r\n                        \"Uid\":1\r\n                     },\r\n                     \"DisplayValue\":1\r\n                  }\r\n               ],\r\n               \"Read\":[\r\n                  {\r\n                     \"Key\":{\r\n                        \"Value\":1,\r\n                        \"Uid\":1\r\n                     },\r\n                     \"DisplayValue\":1\r\n                  }\r\n               ]\r\n            },\r\n            \"SecStatus\":{\r\n               \"CanRead\":1,\r\n               \"CanUpdate\":1,\r\n               \"CanDelete\":1\r\n            },\r\n            \"PartnerKey\":{\r\n               \"Value\":1,\r\n               \"ID\":1,\r\n               \"Number\":1,\r\n               \"EntityType\":1\r\n            },\r\n            \"Partner\":{\r\n               \"Key\":1\r\n            },\r\n            \"Creator\":{\r\n               \"Key\":{\r\n                  \"Value\":1,\r\n                  \"Uid\":1\r\n               },\r\n               \"DisplayValue\":1\r\n            },\r\n            \"CreationDate\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"ModifiedBy\":{\r\n               \"Key\":{\r\n                  \"Value\":1,\r\n                  \"Uid\":1\r\n               },\r\n               \"DisplayValue\":1\r\n            },\r\n            \"LastModifyDate\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"WebSite\":1,\r\n            \"Category\":1,\r\n            \"DoNotSolicitBy\":1,\r\n            \"LastContactDate\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"Udf/$TYPEID(58851)\":1,\r\n            \"Udf/VWRmRGVmaW5pdGlvbgk2MDAzMAkw\":[\r\n               {\r\n                  \"Key\":1,\r\n                  \"Value\":1\r\n               }\r\n            ],\r\n            \"Udf/$NAME(Do not solicit by)\":[\r\n               {\r\n                  \"Key\":1,\r\n                  \"Value\":1\r\n               }\r\n            ]\r\n         }\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/AbEntryRead",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"AbEntryRead"
							]
						},
						"description": "Use the `AbEntryRead` method to search for Address Book entries in the database."
					},
					"response": []
				},
				{
					"name": "AbEntryCreate (Company)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "885320ee-22b9-4192-b8ef-3dc5a5bf71d8",
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"if(jsonData && jsonData.AbEntry && jsonData.AbEntry.Data) {   ",
									"    pm.environment.set(\"AbEntryKey\", jsonData.AbEntry.Data.Key);",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f58ae501-fb89-4229-9f66-589a9979a71a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"AbEntry\":{\r\n      \"Data\":{\r\n         \"Key\":null,\r\n         \"Type\":\"Company\",\r\n         \"CompanyName\":\"Postman Example Company\",\r\n         \"Phone1\":{\r\n            \"Default\":true,\r\n            \"Description\":\"Main\",\r\n            \"Number\":\"1-800-123-1234\"\r\n         },\r\n         \"Phone2\":{\r\n            \"Description\":\"Fax\",\r\n            \"Number\":\"123-123-1234\",\r\n            \"Extension\":\"123\"\r\n         },\r\n         \"Phone3\":\"123-123-1234\",\r\n         \"Email1\":{\r\n            \"Description\":\"Main\",\r\n            \"Default\":true,\r\n            \"Address\":\"example@example.com\"\r\n         },\r\n         \"Email2\":\"postman@example.com\",\r\n         \"Address\":{\r\n            \"AddressLine1\":\"1234 Main St.\",\r\n            \"City\":\"Anytown\",\r\n            \"StateProvince\":\"CA\",\r\n            \"ZipCode\":\"12345\",\r\n            \"Country\":\"USA\"\r\n         },\r\n         \"Lead\":true,\r\n         \"WebSite\":\"https://www.example.com/\"\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/AbEntryCreate",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"AbEntryCreate"
							]
						},
						"description": "Use the `AbEntryCreate` method to create a new Address Book entry in the database."
					},
					"response": []
				},
				{
					"name": "AbEntryCreate (Contact)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dbfde340-c9e3-4b7d-8b5d-a3301538ba65",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f58ae501-fb89-4229-9f66-589a9979a71a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"AbEntry\":{\r\n      \"Data\":{\r\n         \"Key\":null,\r\n         \"ParentKey\":\"{{AbEntryKey}}\",\r\n         \"Type\":\"Contact\",\r\n         \"MrMs\":\"Mrs.\",\r\n         \"FirstName\":\"Postman\",\r\n         \"LastName\":\"Example\",\r\n         \"Phone1\":{\r\n            \"Default\":true,\r\n            \"Description\":\"Main\",\r\n            \"Number\":\"123-123-1234\",\r\n            \"Extension\":\"123\"\r\n         },\r\n         \"Phone2\":{\r\n            \"Description\":\"Home\",\r\n            \"Number\":\"789-789-7890\"\r\n         },\r\n         \"Email1\":{\r\n            \"Description\":\"Home\",\r\n            \"Default\":true,\r\n            \"Address\":\"mrspostman@example.com\"\r\n         },\r\n         \"Address\":{\r\n            \"AddressLine1\":\"1234 Main St.\",\r\n            \"City\":\"Anytown\",\r\n            \"StateProvince\":\"CA\",\r\n            \"ZipCode\":\"12345\",\r\n            \"Country\":\"USA\"\r\n         }\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/AbEntryCreate",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"AbEntryCreate"
							]
						},
						"description": "Use the `AbEntryCreate` method to create a new Address Book entry in the database. When creating a contact, you must supply a valid Company or Individual Key in the `ParentKey` property.\n\nNOTE: You must run the `AbEntryCreate` request *before* running this one so that the `AbEntryKey` environment variable is set."
					},
					"response": []
				},
				{
					"name": "AbEntryUpdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f65194a6-1d00-4b45-bd83-f6cfa61a776e",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f58ae501-fb89-4229-9f66-589a9979a71a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"AbEntry\":{\r\n      \"Data\":{\r\n         \"Key\":\"{{AbEntryKey}}\",\r\n         \"Type\":\"Company\",\r\n         \"CompanyName\":\"Postman Example Company (Updated)\",\r\n         \"Phone2\":{\r\n            \"Default\":true,\r\n            \"Description\":\"New Office\",\r\n            \"Number\":\"321-321-4321\",\r\n            \"Extension\":null\r\n         },\r\n         \"Email1\":\"updated@example.com\",\r\n         \"Address\":{\r\n            \"AddressLine1\":\"4321 Side St.\",\r\n            \"City\":\"Anothertown\",\r\n            \"ZipCode\":\"54321\"\r\n         }\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/AbEntryUpdate",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"AbEntryUpdate"
							]
						},
						"description": "Use the `AbEntryUpdate` method to update an existing Address Book entry in the database.\n\nNOTE: You must run the `AbEntryCreate` request *before* running this one so that the `AbEntryKey` environment variable is set."
					},
					"response": []
				},
				{
					"name": "AbEntryDelete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6e6c69c1-51d2-449c-b5ad-8d6069b80330",
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"if(jsonData.Code === 0) {",
									"    pm.environment.unset(\"AbEntryKey\");",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f58ae501-fb89-4229-9f66-589a9979a71a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"AbEntry\":{\r\n      \"Data\":{\r\n         \"Key\":\"{{AbEntryKey}}\"\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/AbEntryDelete",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"AbEntryDelete"
							]
						},
						"description": "Use the `AbEntryDelete` method to delete an Address Book entry from the database.\n\nNOTE: You must run the `AbEntryCreate` request *before* running this one so that the `AbEntryKey` environment variable is set."
					},
					"response": []
				},
				{
					"name": "AbEntryGetFieldOptions (Generic)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a80ef56b-4f61-4c4d-845d-3f94a66d7dfb",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f58ae501-fb89-4229-9f66-589a9979a71a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"AbEntry\":{\r\n      \"Options\":{\r\n         \"Udf/$TYPEID(60030)\":[\r\n            {\r\n               \"Key\":1,\r\n               \"Value\":1\r\n            }\r\n         ],\r\n         \"Udf/$NAME(Do not solicit by)\":[\r\n            {\r\n               \"Key\":1,\r\n               \"Value\":1\r\n            }\r\n         ],\r\n         \"MrMs\":1,\r\n         \"Salutation\":1,\r\n         \"Position\":1,\r\n         \"Department\":1,\r\n         \"Division\":1,\r\n         \"AccountManager\":{\r\n            \"Key\":{\r\n               \"Value\":1,\r\n               \"Uid\":1\r\n            },\r\n            \"DisplayValue\":1\r\n         },\r\n         \"SecAccess\":{\r\n            \"Write\":[\r\n               {\r\n                  \"Key\":{\r\n                     \"Value\":1,\r\n                     \"Uid\":1\r\n                  },\r\n                  \"DisplayValue\":1\r\n               }\r\n            ],\r\n            \"Read\":[\r\n               {\r\n                  \"Key\":{\r\n                     \"Value\":1,\r\n                     \"Uid\":1\r\n                  },\r\n                  \"DisplayValue\":1\r\n               }\r\n            ]\r\n         }\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/AbEntryGetFieldOptions",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"AbEntryGetFieldOptions"
							]
						},
						"description": "Use the `AbEntryGetFieldOptions` method to retrieve the options for table-valued fields of AbEntry objects."
					},
					"response": []
				},
				{
					"name": "AbEntryGetFieldOptions (Specific Entry)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a80ef56b-4f61-4c4d-845d-3f94a66d7dfb",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f58ae501-fb89-4229-9f66-589a9979a71a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"AbEntry\":{\r\n      \"Data\":{\r\n         \"Key\":\"{{AbEntryKey}}\"\r\n      },\r\n      \"Options\":{\r\n         \"Udf/$TYPEID(60030)\":[\r\n            {\r\n               \"Key\":1,\r\n               \"Value\":1\r\n            }\r\n         ],\r\n         \"Udf/$NAME(Do not solicit by)\":[\r\n            {\r\n               \"Key\":1,\r\n               \"Value\":1\r\n            }\r\n         ],\r\n         \"MrMs\":1,\r\n         \"Salutation\":1,\r\n         \"Position\":1,\r\n         \"Department\":1,\r\n         \"Division\":1,\r\n         \"AccountManager\":{\r\n            \"Key\":{\r\n               \"Value\":1,\r\n               \"Uid\":1\r\n            },\r\n            \"DisplayValue\":1\r\n         },\r\n         \"SecAccess\":{\r\n            \"Write\":[\r\n               {\r\n                  \"Key\":{\r\n                     \"Value\":1,\r\n                     \"Uid\":1\r\n                  },\r\n                  \"DisplayValue\":1\r\n               }\r\n            ],\r\n            \"Read\":[\r\n               {\r\n                  \"Key\":{\r\n                     \"Value\":1,\r\n                     \"Uid\":1\r\n                  },\r\n                  \"DisplayValue\":1\r\n               }\r\n            ]\r\n         }\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/AbEntryGetFieldOptions",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"AbEntryGetFieldOptions"
							]
						},
						"description": "Use the `AbEntryGetFieldOptions` method to retrieve the options for table-valued fields of AbEntry objects. If you include the Key of an existing AbEntry, the options specific to that entry are retrieved.\n\nNOTE: You must run the `AbEntryCreate` request *before* running this one so that the `AbEntryKey` environment variable is set."
					},
					"response": []
				}
			]
		},
		{
			"name": "AuditLog",
			"item": [
				{
					"name": "AuditLogRead (Simple)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d5c830d2-115c-44ef-8ef3-4b0832019a18",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"AuditLog\":{\r\n      \"Criteria\":{\r\n         \"SearchQuery\":{\r\n            \"CreationDate\":{\r\n               \"$RANGE\":[\r\n                  \"2018-01-01\",\r\n                  \"2018-01-31\"\r\n               ]\r\n            }\r\n         }\r\n      },\r\n      \"Scope\":{\r\n         \"Fields\":{\r\n            \"CreationDate\":1,\r\n            \"Creator\":1,\r\n            \"Application\":1,\r\n            \"OPID\":1,\r\n            \"Type\":1,\r\n            \"Source\":1,\r\n            \"Info\":1,\r\n            \"Org\":1,\r\n            \"New\":1\r\n         }\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/AuditLogRead",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"AuditLogRead"
							]
						},
						"description": "Use the `AuditLogRead` method to search for audit log records in the database."
					},
					"response": []
				},
				{
					"name": "AuditLogRead (Detailed)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d5c830d2-115c-44ef-8ef3-4b0832019a18",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"AuditLog\":{\r\n      \"Criteria\":{\r\n         \"SearchQuery\":{\r\n            \"$AND\":[\r\n               {\r\n                  \"CreationDate\":{\r\n                     \"$RANGE\":[\r\n                        \"2018-01-01T00:00:00-08:00\",\r\n                        \"2018-01-31T23:59:59-08:00\"\r\n                     ]\r\n                  }\r\n               },\r\n               {\r\n                  \"Source\":{\r\n                     \"$EQ\":\"AbEntry\"\r\n                  }\r\n               }\r\n            ]\r\n         }\r\n      },\r\n      \"Scope\":{\r\n         \"Fields\":{\r\n            \"CreationDate\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"Creator\":{\r\n               \"Key\":1,\r\n               \"UID\":1,\r\n               \"DisplayName\":1\r\n            },\r\n            \"Application\":1,\r\n            \"OPID\":1,\r\n            \"Type\":1,\r\n            \"Source\":1,\r\n            \"Info\":1,\r\n            \"Org\":{\r\n               \"AbEntry\":{\r\n                  \"Key\":{\r\n                     \"Value\":1,\r\n                     \"ID\":1,\r\n                     \"Number\":1,\r\n                     \"EntityType\":1\r\n                  },\r\n                  \"Type\":1,\r\n                  \"CompanyName\":1,\r\n                  \"FirstName\":1,\r\n                  \"MiddleName\":1,\r\n                  \"LastName\":1,\r\n                  \"Phone\":1,\r\n                  \"Email\":1,\r\n                  \"Creator\":1,\r\n                  \"CreationDate\":1,\r\n                  \"ModifiedBy\":1,\r\n                  \"LastModifyDate\":1\r\n               }\r\n            },\r\n            \"New\":{\r\n               \"AbEntry\":{\r\n                  \"Key\":{\r\n                     \"Value\":1,\r\n                     \"ID\":1,\r\n                     \"Number\":1,\r\n                     \"EntityType\":1\r\n                  },\r\n                  \"Type\":1,\r\n                  \"CompanyName\":1,\r\n                  \"FirstName\":1,\r\n                  \"MiddleName\":1,\r\n                  \"LastName\":1,\r\n                  \"Phone\":1,\r\n                  \"Email\":1,\r\n                  \"Creator\":1,\r\n                  \"CreationDate\":1,\r\n                  \"ModifiedBy\":1,\r\n                  \"LastModifyDate\":1\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/AuditLogRead",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"AuditLogRead"
							]
						},
						"description": "Use the `AuditLogRead` method to search for audit log records in the database."
					},
					"response": []
				}
			]
		},
		{
			"name": "Opportunity",
			"item": [
				{
					"name": "OpportunityRead (Simple)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d5c830d2-115c-44ef-8ef3-4b0832019a18",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Opportunity\":{\r\n      \"Criteria\":{\r\n         \"SearchQuery\":{\r\n            \"Objective\":{\r\n               \"$LIKE\":\"%\"\r\n            }\r\n         }\r\n      },\r\n      \"Scope\":{\r\n         \"Fields\":{\r\n            \"Key\":1,\r\n            \"AbEntry\":1,\r\n            \"AbEntryKey\":1,\r\n            \"Contact\":1,\r\n            \"ContactKey\":1,\r\n            \"Objective\":1,\r\n            \"Description\":1,\r\n            \"Status\":1,\r\n            \"Cost\":1,\r\n            \"ActualRevenue\":1,\r\n            \"ForecastRevenue\":1,\r\n            \"StartDate\":1,\r\n            \"CloseDate\":1,\r\n            \"Creator\":1,\r\n            \"CreationDate\":1,\r\n            \"ModifiedBy\":1,\r\n            \"LastModifyDate\":1,\r\n            \"Leader\":1,\r\n            \"SalesTeam\":1,\r\n            \"ReadOnly\":1,\r\n            \"SalesProcessKey\":1,\r\n            \"SalesProcess\":1,\r\n            \"CurrentSalesStageKey\":1,\r\n            \"CurrentSalesStage\":1,\r\n            \"CurrentSalesStageAge\":1,\r\n            \"Category\":1,\r\n            \"Product\":1\r\n         }\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/OpportunityRead",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"OpportunityRead"
							]
						},
						"description": "Use the `OpportunityRead` method to search for opportunities in the database."
					},
					"response": []
				},
				{
					"name": "OpportunityRead (Detailed)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d5c830d2-115c-44ef-8ef3-4b0832019a18",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Opportunity\":{\r\n      \"Criteria\":{\r\n         \"SearchQuery\":{\r\n            \"$OR\":[\r\n               {\r\n                  \"CreationDate\":{\r\n                     \"$RANGE\":[\r\n                        \"2018-02-01\",\r\n                        \"2018-02-28\"\r\n                     ]\r\n                  }\r\n               },\r\n               {\r\n                  \"Status\":{\r\n                     \"$IN\":[\r\n                        1,\r\n                        2\r\n                     ]\r\n                  }\r\n               }\r\n            ]\r\n         }\r\n      },\r\n      \"Scope\":{\r\n         \"Fields\":{\r\n            \"Key\":1,\r\n            \"AbEntry\":{\r\n               \"Key\":1,\r\n               \"CompanyName\":1,\r\n               \"Email\":1,\r\n               \"Phone\":1\r\n            },\r\n            \"AbEntryKey\":1,\r\n            \"Contact\":{\r\n               \"Key\":1,\r\n               \"FirstName\":1,\r\n               \"LastName\":1\r\n            },\r\n            \"ContactKey\":1,\r\n            \"Objective\":1,\r\n            \"Description\":1,\r\n            \"Status\":1,\r\n            \"Cost\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1,\r\n               \"CurrencyCode\":1\r\n            },\r\n            \"ActualRevenue\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1,\r\n               \"CurrencyCode\":1\r\n            },\r\n            \"ForecastRevenue\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1,\r\n               \"CurrencyCode\":1\r\n            },\r\n            \"StartDate\":1,\r\n            \"CloseDate\":1,\r\n            \"Creator\":{\r\n               \"Key\":{\r\n                  \"Value\":1,\r\n                  \"UID\":1\r\n               },\r\n               \"DisplayValue\":1\r\n            },\r\n            \"CreationDate\":1,\r\n            \"ModifiedBy\":{\r\n               \"Key\":{\r\n                  \"Value\":1,\r\n                  \"UID\":1\r\n               },\r\n               \"DisplayValue\":1\r\n            },\r\n            \"LastModifyDate\":1,\r\n            \"Leader\":{\r\n               \"Key\":{\r\n                  \"Value\":1,\r\n                  \"UID\":1\r\n               },\r\n               \"DisplayValue\":1\r\n            },\r\n            \"SalesTeam\":{\r\n               \"Key\":{\r\n                  \"Value\":1,\r\n                  \"ID\":1\r\n               },\r\n               \"DisplayName\":1\r\n            },\r\n            \"ReadOnly\":1,\r\n            \"SalesProcessKey\":1,\r\n            \"SalesProcess\":1,\r\n            \"CurrentSalesStageKey\":1,\r\n            \"CurrentSalesStage\":1,\r\n            \"CurrentSalesStageAge\":1,\r\n            \"Category\":[\r\n               {\r\n                  \"Key\":1,\r\n                  \"Value\":1\r\n               }\r\n            ],\r\n            \"Product\":[\r\n               {\r\n                  \"Key\":1,\r\n                  \"Value\":1\r\n               }\r\n            ]\r\n         }\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/OpportunityRead",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"OpportunityRead"
							]
						},
						"description": "Use the `OpportunityRead` method to search for opportunities in the database."
					},
					"response": []
				},
				{
					"name": "OpportunityCreate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9653ab67-d1f8-4bea-8125-1b38072ec3b9",
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"if(jsonData && jsonData.Opportunity && jsonData.Opportunity.Data) {   ",
									"    pm.environment.set(\"OpportunityKey\", jsonData.Opportunity.Data.Key);",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f58ae501-fb89-4229-9f66-589a9979a71a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Opportunity\":{\r\n      \"Data\":{\r\n         \"Key\":null,\r\n         \"AbEntryKey\":\"{{AbEntryKey}}\",\r\n         \"Objective\":\"Example\",\r\n         \"Description\":\"This is an example opportunity.\\nIt was created using Maximizer.Web.Data in Postman!\",\r\n         \"Status\":2,\r\n         \"Cost\":1234.56,\r\n         \"ForecastRevenue\":2345.67,\r\n         \"StartDate\":\"2018-01-01\"\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/OpportunityCreate",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"OpportunityCreate"
							]
						},
						"description": "Use the `OpportunityCreate` method to create a new opportunity in the database.\n\nNOTE: You must run the `AbEntryCreate (Company)` request before running this one so that the `AbEntryKey` environment variable is set."
					},
					"response": []
				},
				{
					"name": "OpportunityUpdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f65194a6-1d00-4b45-bd83-f6cfa61a776e",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f58ae501-fb89-4229-9f66-589a9979a71a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Opportunity\":{\r\n      \"Data\":{\r\n         \"Key\":\"{{OpportunityKey}}\",\r\n         \"Objective\":\"Postman Example\",\r\n         \"Status\":3,\r\n         \"ActualRevenue\":3456.78,\r\n         \"CloseDate\":\"2018-02-01\"\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/OpportunityUpdate",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"OpportunityUpdate"
							]
						},
						"description": "Use the `OpportunityUpdate` method to update an existing opportunity in the database.\n\nNOTE: You must run the `OpportunityCreate` request *before* running this one so that the `OpportunityKey` environment variable is set."
					},
					"response": []
				},
				{
					"name": "OpportunityDelete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bff0213b-d50c-4bc0-89e1-a399412b5a9b",
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"if(jsonData.Code === 0) {",
									"    pm.environment.unset(\"OpportunityKey\");",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f58ae501-fb89-4229-9f66-589a9979a71a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Opportunity\":{\r\n      \"Data\":{\r\n         \"Key\":\"{{OpportunityKey}}\"\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/OpportunityDelete",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"OpportunityDelete"
							]
						},
						"description": "Use the `OpportunityDelete` method to delete an opportunity from the database.\n\nNOTE: You must run the `OpportunityCreate` request *before* running this one so that the `OpportunityKey` environment variable is set."
					},
					"response": []
				},
				{
					"name": "OpportunityGetFieldOptions (Generic)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a80ef56b-4f61-4c4d-845d-3f94a66d7dfb",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f58ae501-fb89-4229-9f66-589a9979a71a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Opportunity\":{\r\n      \"Options\":{\r\n         \"Objective\":1,\r\n         \"Status\":1,\r\n         \"Creator\":1,\r\n         \"ModifiedBy\":1,\r\n         \"Leader\":1,\r\n         \"SalesTeam\":1,\r\n         \"Category\":1,\r\n         \"Product\":1\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/OpportunityGetFieldOptions",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"OpportunityGetFieldOptions"
							]
						},
						"description": "Use the `OpportunityGetFieldOptions` method to retrieve the options for table-valued fields of Opportunity objects."
					},
					"response": []
				},
				{
					"name": "OpportunityGetFieldOptions (Specific Entry)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a80ef56b-4f61-4c4d-845d-3f94a66d7dfb",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f58ae501-fb89-4229-9f66-589a9979a71a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Opportunity\":{\r\n      \"Data\":{\r\n         \"Key\":\"{{OpportunityKey}}\"\r\n      },\r\n      \"Options\":{\r\n         \"Objective\":1,\r\n         \"Status\":[\r\n            {\r\n               \"Key\":1,\r\n               \"Value\":1\r\n            }\r\n         ],\r\n         \"Creator\":{\r\n            \"Key\":{\r\n               \"Value\":1,\r\n               \"UID\":1\r\n            },\r\n            \"DisplayValue\":1\r\n         },\r\n         \"ModifiedBy\":{\r\n            \"Key\":{\r\n               \"Value\":1,\r\n               \"UID\":1\r\n            },\r\n            \"DisplayValue\":1\r\n         },\r\n         \"Leader\":{\r\n            \"Key\":{\r\n               \"Value\":1,\r\n               \"UID\":1\r\n            },\r\n            \"DisplayValue\":1\r\n         },\r\n         \"SalesTeam\":{\r\n            \"Key\":{\r\n               \"Value\":1,\r\n               \"ID\":1\r\n            },\r\n            \"DisplayName\":1\r\n         },\r\n         \"Category\":[\r\n            {\r\n               \"Key\":1,\r\n               \"Value\":1\r\n            }\r\n         ],\r\n         \"Product\":[\r\n            {\r\n               \"Key\":1,\r\n               \"Value\":1\r\n            }\r\n         ]\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/OpportunityGetFieldOptions",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"OpportunityGetFieldOptions"
							]
						},
						"description": "Use the `OpportunityGetFieldOptions` method to retrieve the options for table-valued fields of Opportunity objects. If you include the Key of an existing Opportunity, the options specific to that entry are retrieved.\n\nNOTE: You must run the `OpportunityCreate` request *before* running this one so that the `OpportunityKey` environment variable is set."
					},
					"response": []
				}
			]
		},
		{
			"name": "Schema",
			"item": [
				{
					"name": "SchemaRead (Simple)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f65194a6-1d00-4b45-bd83-f6cfa61a776e",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f58ae501-fb89-4229-9f66-589a9979a71a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Schema\":{\r\n      \"Criteria\":{\r\n         \"SearchQuery\":{\r\n            \"AppliesTo\":{\r\n               \"$EQ\":\"AbEntry\"\r\n            }\r\n         }\r\n      },\r\n      \"Scope\":{\r\n         \"Fields\":{\r\n            \"Key\":1,\r\n            \"Alias\":1,\r\n            \"Code\":1,\r\n            \"AppliesTo\":1,\r\n            \"Folder\":1,\r\n            \"SecAccess\":1,\r\n            \"Creator\":1,\r\n            \"CreationDate\":1,\r\n            \"RequestedBy\":1,\r\n            \"Inactive\":1,\r\n            \"Mandatory\":1,\r\n            \"Formula\":1,\r\n            \"Type\":1,\r\n            \"Name\":1,\r\n            \"Nullable\":1,\r\n            \"ReadOnly\":1,\r\n            \"Attributes\":1,\r\n            \"Items\":1\r\n         }\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/SchemaRead",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"SchemaRead"
							]
						},
						"description": "Use the `SchemaRead` method to query the structure or metadata of entities in the database."
					},
					"response": []
				},
				{
					"name": "SchemaRead (Detailed)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f65194a6-1d00-4b45-bd83-f6cfa61a776e",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f58ae501-fb89-4229-9f66-589a9979a71a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Schema\":{\r\n      \"Criteria\":{\r\n         \"SearchQuery\":{\r\n            \"AppliesTo\":{\r\n               \"$EQ\":\"AbEntry\"\r\n            }\r\n         }\r\n      },\r\n      \"Scope\":{\r\n         \"Fields\":{\r\n            \"Key\":1,\r\n            \"Alias\":[\r\n               {\r\n                  \"Value\":1\r\n               }\r\n            ],\r\n            \"Code\":1,\r\n            \"AppliesTo\":[\r\n               {\r\n                  \"Value\":1\r\n               }\r\n            ],\r\n            \"Folder\":{\r\n               \"Key\":1,\r\n               \"Name\":1,\r\n               \"Path\":1\r\n            },\r\n            \"SecAccess\":{\r\n               \"Write\":[\r\n                  {\r\n                     \"Key\":{\r\n                        \"Value\":1,\r\n                        \"Uid\":1\r\n                     },\r\n                     \"DisplayValue\":1\r\n                  }\r\n               ],\r\n               \"Read\":[\r\n                  {\r\n                     \"Key\":{\r\n                        \"Value\":1,\r\n                        \"Uid\":1\r\n                     },\r\n                     \"DisplayValue\":1\r\n                  }\r\n               ]\r\n            },\r\n            \"Creator\":{\r\n               \"Key\":{\r\n                  \"Value\":1,\r\n                  \"Uid\":1\r\n               },\r\n               \"DisplayValue\":1\r\n            },\r\n            \"CreationDate\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"RequestedBy\":{\r\n               \"Key\":{\r\n                  \"Value\":1,\r\n                  \"Uid\":1\r\n               },\r\n               \"DisplayValue\":1\r\n            },\r\n            \"Inactive\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"Mandatory\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"Formula\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"Type\":1,\r\n            \"Name\":1,\r\n            \"Nullable\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"ReadOnly\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"Attributes\":1,\r\n            \"Items\":[\r\n               {\r\n                  \"Key\":1,\r\n                  \"Value\":1\r\n               }\r\n            ]\r\n         }\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/SchemaRead",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"SchemaRead"
							]
						},
						"description": "Use the `SchemaRead` method to query the structure or metadata of entities in the database."
					},
					"response": []
				},
				{
					"name": "SchemaGetFieldOptions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a80ef56b-4f61-4c4d-845d-3f94a66d7dfb",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f58ae501-fb89-4229-9f66-589a9979a71a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Schema\":{\r\n      \"Options\":{\r\n         \"Type\":1,\r\n         \"AppliesTo\":1,\r\n         \"RequestedBy\":[\r\n            {\r\n               \"Key\":{\r\n                  \"Value\":1,\r\n                  \"Uid\":1\r\n               },\r\n               \"DisplayValue\":1\r\n            }\r\n         ],\r\n         \"SecAccess\":{\r\n            \"Write\":[\r\n               {\r\n                  \"Key\":{\r\n                     \"Value\":1,\r\n                     \"Uid\":1\r\n                  },\r\n                  \"DisplayValue\":1\r\n               }\r\n            ],\r\n            \"Read\":[\r\n               {\r\n                  \"Key\":{\r\n                     \"Value\":1,\r\n                     \"Uid\":1\r\n                  },\r\n                  \"DisplayValue\":1\r\n               }\r\n            ]\r\n         }\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/SchemaGetFieldOptions",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"SchemaGetFieldOptions"
							]
						},
						"description": "Use the `SchemaGetFieldOptions` method to retrieve the options for table-valued fields of Schema objects."
					},
					"response": []
				},
				{
					"name": "SchemaCreate (StringField)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "751adbd7-22e4-46b6-8398-30ca95e2c013",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f58ae501-fb89-4229-9f66-589a9979a71a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Schema\":{\r\n      \"Data\":{\r\n         \"Key\":null,\r\n         \"AppliesTo\":[\r\n            \"Company\",\r\n            \"Contact\"\r\n         ],\r\n         \"Type\":\"StringField\",\r\n         \"Name\":\"Postman Example Alphanumeric Field\",\r\n         \"Attributes\":{\r\n            \"MaxLength\":255,\r\n            \"Encrypted\":false\r\n         }\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/SchemaCreate",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"SchemaCreate"
							]
						},
						"description": "Use the `SchemaCreate` method to create a new user-defined field in the database."
					},
					"response": []
				},
				{
					"name": "SchemaCreate (DateTimeField)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8adb9401-8ad3-4abe-93b3-3e2c1f52b2db",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f58ae501-fb89-4229-9f66-589a9979a71a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Schema\":{\r\n      \"Data\":{\r\n         \"Key\":null,\r\n         \"AppliesTo\":[\r\n            \"AbEntry\"\r\n         ],\r\n         \"Folder\":\"VWRmU2V0dXAJMA==\",\r\n         \"Inactive\":false,\r\n         \"Type\":\"DateTimeField\",\r\n         \"Name\":\"Postman Example Date Field\",\r\n         \"Attributes\":{\r\n            \"Date\":true,\r\n            \"Time\":true,\r\n            \"IgnoreYear\":false\r\n         }\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/SchemaCreate",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"SchemaCreate"
							]
						},
						"description": "Use the `SchemaCreate` method to create a new user-defined field in the database."
					},
					"response": []
				},
				{
					"name": "SchemaCreate (NumericField)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c39931e8-6d12-4ad6-a432-f59862025a7d",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f58ae501-fb89-4229-9f66-589a9979a71a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Schema\":{\r\n      \"Data\":{\r\n         \"Key\":null,\r\n         \"AppliesTo\":[\r\n            \"Opportunity\"\r\n         ],\r\n         \"Folder\":\"VWRmU2V0dXAJMA==\",\r\n         \"Inactive\":false,\r\n         \"Type\":\"NumericField\",\r\n         \"Name\":\"Postman Example Numeric Field\",\r\n         \"Attributes\":{\r\n            \"MinValue\":0.00,\r\n            \"MaxValue\":100.00,\r\n            \"DecimalPlaces\":2\r\n         }\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/SchemaCreate",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"SchemaCreate"
							]
						},
						"description": "Use the `SchemaCreate` method to create a new user-defined field in the database."
					},
					"response": []
				},
				{
					"name": "SchemaCreate (EnumField<StringItem>)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "937fa12e-7939-4ffa-aff3-ab736b16fb91",
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"if(jsonData && jsonData.Schema && jsonData.Schema.Data) {   ",
									"    pm.environment.set(\"TableFieldKey\", jsonData.Schema.Data.Key);",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f58ae501-fb89-4229-9f66-589a9979a71a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Schema\":{\r\n      \"Data\":{\r\n         \"Key\":null,\r\n         \"AppliesTo\":[\r\n            \"Company\"\r\n         ],\r\n         \"Folder\":\"VWRmU2V0dXAJMA==\",\r\n         \"Type\":\"EnumField<StringItem>\",\r\n         \"Name\":\"Postman Example Table Field\",\r\n         \"Items\":[\r\n            {\r\n               \"Key\":null,\r\n               \"Value\":\"Item 1\"\r\n            },\r\n            {\r\n               \"Key\":null,\r\n               \"Value\":\"Item 2\"\r\n            },\r\n            {\r\n               \"Key\":null,\r\n               \"Value\":\"Item 3\"\r\n            }\r\n         ]\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/SchemaCreate",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"SchemaCreate"
							]
						},
						"description": "Use the `SchemaCreate` method to create a new user-defined field in the database."
					},
					"response": []
				},
				{
					"name": "SchemaUpdate (EnumField<StringItem>)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f65194a6-1d00-4b45-bd83-f6cfa61a776e",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f7f8e968-c359-4fa1-90a2-a666265a86b0",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Schema\":{\r\n      \"Data\":{\r\n         \"Key\":\"{{TableFieldKey}}\",\r\n         \"Name\":\"Postman Example Table Field (Updated)\",\r\n         \"AppliesTo\":[\r\n            \"AbEntry\"\r\n         ],\r\n         \"Type\":\"EnumField<StringItem>\",\r\n         \"Items\":[\r\n            {\r\n               \"Key\":1,\r\n               \"Value\":\"Item 1\"\r\n            },\r\n            {\r\n               \"Key\":3,\r\n               \"Value\":\"Modified Item\"\r\n            },\r\n            {\r\n               \"Key\":null,\r\n               \"Value\":\"New Item\"\r\n            }\r\n         ]\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/SchemaUpdate",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"SchemaUpdate"
							]
						},
						"description": "Use the `SchemaUpdate` method to update an existing user-defined field in the database.\n\nNOTE: You must run the `SchemaCreate` request to create an EnumField\\<StringItem\\> *before* running this one so that the `TableFieldKey` environment variable is set."
					},
					"response": []
				},
				{
					"name": "SchemaDelete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "70a03107-6f94-4b2b-8bfb-e60858158ba7",
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"if(jsonData.Code === 0) {",
									"    pm.environment.unset(\"TableFieldKey\");",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d34fc95a-e8ac-4ca5-96ac-019cd7c694d8",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Schema\":{\r\n      \"Data\":{\r\n         \"Key\":\"{{TableFieldKey}}\",\r\n         \"AppliesTo\":[\r\n            \"AbEntry\"\r\n         ],\r\n         \"Type\":\"EnumField<StringItem>\"\r\n      }\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/SchemaDelete",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"SchemaDelete"
							]
						},
						"description": "Use the `SchemaDelete` method to delete an existing user-defined field in the database.\n\nNOTE: You must run the `SchemaCreate` request to create an EnumField\\<StringItem\\> *before* running this one so that the `TableFieldKey` environment variable is set."
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "UserRead (Simple)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d5c830d2-115c-44ef-8ef3-4b0832019a18",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Token\":\"{{Token}}\",\r\n    \"User\":{\r\n        \"Criteria\":{\r\n            \"SearchQuery\":{\r\n                \"FirstName\":{\r\n                    \"$LIKE\":\"%\"\r\n                }\r\n            }\r\n        },\r\n        \"Scope\":{\r\n            \"Fields\":{\r\n                \"Key\":1,\r\n                \"Password\":1,\r\n                \"AccessType\":1,\r\n                \"FirstName\":1,\r\n                \"LastName\":1,\r\n                \"DisplayName\":1,\r\n                \"Disabled\":1\r\n            }\r\n        }\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/UserRead",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"UserRead"
							]
						},
						"description": "Use the `UserRead` method to search for users in the database."
					},
					"response": []
				},
				{
					"name": "UserRead (Detailed)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d5c830d2-115c-44ef-8ef3-4b0832019a18",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Token\":\"{{Token}}\",\r\n    \"User\":{\r\n        \"Criteria\":{\r\n            \"SearchQuery\":{\r\n                \"FirstName\":{\r\n                    \"$LIKE\":\"%\"\r\n                }\r\n            }\r\n        },\r\n        \"Scope\":{\r\n            \"Fields\":{\r\n                \"Key\":1,\r\n                \"Password\":1,\r\n                \"AccessType\":1,\r\n                \"FirstName\":1,\r\n                \"LastName\":1,\r\n                \"DisplayName\":1,\r\n                \"Disabled\":1,\r\n                \"Roles\":1,\r\n                \"Permissions\":{\r\n                    \"AccountSetup\":{\r\n                        \"Create\":1,\r\n                        \"Read\":1,\r\n                        \"Update\":1,\r\n                        \"Delete\":1\r\n                    },\r\n                    \"UserDefinedFieldSetup\":{\r\n                        \"Create\":1,\r\n                        \"Read\":1,\r\n                        \"Update\":1,\r\n                        \"Delete\":1\r\n                    },\r\n                    \"AddressBook\":{\r\n                        \"Create\":1,\r\n                        \"Read\":1,\r\n                        \"Update\":1,\r\n                        \"Delete\":1\r\n                    },\r\n                    \"AltAddress\":{\r\n                        \"Create\":1,\r\n                        \"Read\":1,\r\n                        \"Update\":1,\r\n                        \"Delete\":1\r\n                    },\r\n                    \"CustomerService\":{\r\n                        \"Create\":1,\r\n                        \"Read\":1,\r\n                        \"Update\":1,\r\n                        \"Delete\":1\r\n                    },\r\n                    \"Opportunity\":{\r\n                        \"Create\":1,\r\n                        \"Read\":1,\r\n                        \"Update\":1,\r\n                        \"Delete\":1\r\n                    },\r\n                    \"UserDefinedFields\":{\r\n                        \"Create\":1,\r\n                        \"Read\":1,\r\n                        \"Update\":1,\r\n                        \"Delete\":1\r\n                    },\r\n                    \"Notes\":{\r\n                        \"Create\":1,\r\n                        \"Read\":1,\r\n                        \"Update\":1,\r\n                        \"Delete\":1\r\n                    },\r\n                    \"Documents\":{\r\n                        \"Create\":1,\r\n                        \"Read\":1,\r\n                        \"Update\":1,\r\n                        \"Delete\":1\r\n                    },\r\n                    \"KnowledgeBase\":{\r\n                        \"Create\":1,\r\n                        \"Read\":1,\r\n                        \"Update\":1,\r\n                        \"Delete\":1\r\n                    },\r\n                    \"Campaign\":{\r\n                        \"Create\":1,\r\n                        \"Read\":1,\r\n                        \"Update\":1,\r\n                        \"Delete\":1\r\n                    },\r\n                    \"ActionPlanLibrary\":{\r\n                        \"Create\":1,\r\n                        \"Read\":1,\r\n                        \"Update\":1,\r\n                        \"Delete\":1\r\n                    },\r\n                    \"CompanyLibrary\":{\r\n                        \"Create\":1,\r\n                        \"Read\":1,\r\n                        \"Update\":1,\r\n                        \"Delete\":1\r\n                    },\r\n                    \"Quota\":{\r\n                        \"Create\":1,\r\n                        \"Read\":1,\r\n                        \"Update\":1,\r\n                        \"Delete\":1\r\n                    },\r\n                    \"Dashboard\":{\r\n                        \"Create\":1,\r\n                        \"Read\":1,\r\n                        \"Update\":1,\r\n                        \"Delete\":1\r\n                    },\r\n                    \"ProductSetup\":{\r\n                        \"Create\":1,\r\n                        \"Read\":1,\r\n                        \"Update\":1,\r\n                        \"Delete\":1\r\n                    }\r\n                },\r\n                \"Privileges\":{\r\n                    \"GlobalEdit\":1,\r\n                    \"PublicEntries\":1,\r\n                    \"PrivateEntries\":1,\r\n                    \"Import\":1,\r\n                    \"Export\":1,\r\n                    \"SyncContacts\":1,\r\n                    \"ModifySystemTables\":1,\r\n                    \"ModifyNoteProperties\":1,\r\n                    \"ModifyEmailTemplates\":1,\r\n                    \"ModifyKeyFields\":1,\r\n                    \"BypassUserDetailPermissions\":1,\r\n                    \"BypassEntryPermissions\":1,\r\n                    \"BypassNotePermissions\":1,\r\n                    \"ManageCurrencies\":1,\r\n                    \"AccessAuditLog\":1\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/Data.svc/json/UserRead",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"Data.svc",
								"json",
								"UserRead"
							]
						},
						"description": "Use the `UserRead` method to search for users in the database."
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "96afba58-09a1-4391-ad6d-3a09e7926a16",
				"type": "text/javascript",
				"exec": [
					"// This script checks to see if there is a valid token in",
					"// the environment before making any requests to the API",
					"// by calling the TokenValid method. If there is already a",
					"// valid token, it does nothing. If there is no token or if",
					"// the token is not valid, it attempts to obtain a new one",
					"// by calling the Authenticate method, and if successful, ",
					"// saves the token to the environment.",
					"",
					"// Get the API URL and check to make sure it is non-empty",
					"const baseURL = pm.environment.get(\"BaseURL\");",
					"if(!baseURL) {",
					"    console.error(\"The BaseURL environment variable is not set.\");",
					"    return;",
					"}",
					"",
					"// We don't want to do this when calling the Authenticate or",
					"// TokenValid methods, since the purpose of those methods is",
					"// to call the very methods that we're calling below",
					"if(pm.info.requestName.startsWith(\"Authenticate\") || pm.info.requestName === \"TokenValid\") {",
					"    return;",
					"}",
					"",
					"// Check to see if there is already a Token in the environment variable",
					"let token = pm.environment.get(\"Token\");",
					"if(token) {",
					"    // If there is a Token, see if it is still valid",
					"    DoTokenValidRequest(token);",
					"} else {",
					"    // If there is no Token, just call Authenticate",
					"    DoAuthenticateRequest();",
					"}",
					"",
					"//----------------",
					"//Helper Functions",
					"//----------------",
					"",
					"// Calls the TokenValid method",
					"function DoTokenValidRequest(token) {",
					"    console.info(\"Checking to see if token is valid...\");",
					"    // Construct the TokenValid request",
					"    let tokenValidRequest = {",
					"      url: pm.environment.get(\"BaseURL\") + \"/Data.svc/json/TokenValid\",",
					"      method: \"POST\",",
					"      body: {",
					"        mode: \"raw\",",
					"        raw: JSON.stringify({ \"Token\" : pm.environment.get(\"Token\") })",
					"      }",
					"    };",
					"    ",
					"    // Send the TokenValid request to the API",
					"    pm.sendRequest(tokenValidRequest, HandleTokenValidResponse); ",
					"}",
					"",
					"// Handles the TokenValid method response, and calls the ",
					"// Authenticate method if necessary.",
					"function HandleTokenValidResponse(err, res) {",
					"    if(err || !res) {",
					"        // Something went wrong when trying to call the API",
					"        console.error(\"An error occurred when trying to call the TokenValid method.\");",
					"    } else {",
					"        // Check to see if the method was successful",
					"        let jsonData = res.json();",
					"        if(jsonData.Code === 0) {",
					"            console.info(\"The current token is valid.\");",
					"        } else {",
					"            DoAuthenticateRequest();",
					"        }",
					"    }",
					"}",
					"",
					"// Calls the Authenticate method",
					"function DoAuthenticateRequest() {",
					"    // The token is not valid, so we will try to get a new one.",
					"    // Create the Authenticate request body.",
					"    console.info(\"Token is missing or invalid; requesting a new one...\");",
					"    let requestBody = {",
					"        \"Database\": pm.environment.get(\"Database\"),",
					"        \"UID\": pm.environment.get(\"UID\"),",
					"        \"Password\": pm.environment.get(\"Password\")",
					"    };",
					"    ",
					"    // Check to see if the VendorId and AppKey are set, and if",
					"    // they are, add them to the request.",
					"    if(pm.environment.get(\"VendorId\") && pm.environment.get(\"AppKey\")) {",
					"        requestBody.VendorId = pm.environment.get(\"VendorId\");",
					"        requestBody.AppKey = pm.environment.get(\"AppKey\");",
					"    }",
					"    ",
					"    // Create the request object",
					"    let authenticateRequest = {",
					"      url: pm.environment.get(\"BaseURL\") + \"/Data.svc/json/Authenticate\",",
					"      method: \"POST\",",
					"      body: {",
					"        mode: \"raw\",",
					"        raw: JSON.stringify(requestBody)",
					"      }",
					"    };",
					"    ",
					"    // Send the Authenticate request to the API",
					"    pm.sendRequest(authenticateRequest, HandleAuthenticateResponse);    ",
					"}",
					"",
					"// Handles the Authenticate method response and stores the",
					"// new token in the \"Token\" environment variable.",
					"function HandleAuthenticateResponse(err, res) {",
					"    if(err || !res) {",
					"        // The request failed",
					"        console.error(\"An error occurred when trying to call the Authenticate method.\");",
					"    } else {",
					"        // The request succeeded",
					"        let jsonData = res.json();",
					"        if(jsonData.Code === 0) {",
					"            // Store the new token in the environment variable",
					"            // so that we can use it in subsequent requests",
					"            console.info(\"Retrieved new token.\");",
					"            pm.environment.set(\"Token\", jsonData.Data.Token);",
					"        } else {",
					"            // A nonzero Code means that there was an error",
					"            console.error(\"Authentication failed. Check the credentials in the environment.\");",
					"        }",
					"    }",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "7afdc073-0ffe-497e-8ce8-a61f52a4acae",
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});",
					"pm.test(\"Response Code is 0\", function () {",
					"    var jsonData = pm.response.json();",
					"    pm.expect(jsonData.Code).to.eql(0);",
					"});",
					""
				]
			}
		}
	]
}
