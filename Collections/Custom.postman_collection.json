{
	"info": {
		"_postman_id": "9b094f34-f5ba-4065-8c2c-7de67f34ea2d",
		"name": "Custom",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create - Custom",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b7e2a806-7062-4e1c-957d-1c99ebe0ae53",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"if(jsonData && jsonData.Custom && jsonData.Custom.Data) {   ",
							"    pm.environment.set(\"CustomKey\", jsonData.Custom.Data.Key);",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Custom\":{\r\n      \"Data\":{\r\n         \"Key\":null,\r\n         \"ApplicationId\":\"MyAppId\",\r\n         \"Name\":\"Test Creating Custom\",\r\n         \"Description\":\"Testing Creating Custom Object\",\r\n         \"Text1\":\"Sample Text\",\r\n         \"Number1\":1,\r\n         \"Numeric1\":2.3,\r\n         \"DateTime1\":\"2018-03-16T13:33:33\"\r\n      }\r\n   }\r\n}"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/Create",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"Create"
					]
				},
				"description": "Use the `Create` method to create a Custom object in the database."
			},
			"response": []
		},
		{
			"name": "Create - Custom (All)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d58e1442-aabc-4c24-8264-e1133a1a0fd2",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"if(jsonData && jsonData.Custom && jsonData.Custom.Data) {   ",
							"    pm.environment.set(\"CustomKey\", jsonData.Custom.Data.Key);",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Custom\":{\r\n      \"Data\":{\r\n         \"Key\":null,\r\n         \"ApplicationId\":\"MyAppId\",\r\n         \"Name\":\"Test Creating Custom\",\r\n         \"Description\":\"Testing Creating Custom Object\",\r\n         \"Text1\":\"Testing\",\r\n         \"Text2\":\"Test2\",\r\n         \"Text3\":\"Test3\",\r\n         \"Text4\":\"Test4\",\r\n         \"Number1\":1,\r\n         \"Number2\":2,\r\n         \"Number3\":3,\r\n         \"Number4\":4,\r\n         \"Number5\":5,\r\n         \"Number6\":6,\r\n         \"Number7\":7,\r\n         \"Number8\":8,\r\n         \"Numeric1\":1,\r\n         \"Numeric2\":2,\r\n         \"Numeric3\":3,\r\n         \"Numeric4\":4,\r\n         \"DateTime1\":\"2018-05-30\",\r\n         \"DateTime2\":\"2018-05-30\",\r\n         \"DateTime3\":\"2018-05-30\",\r\n         \"DateTime4\":\"2018-05-30\"\r\n      }\r\n   }\r\n}"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/Create",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"Create"
					]
				},
				"description": "Use the `Create` method to create a Custom object in the database."
			},
			"response": []
		},
		{
			"name": "Read - Custom",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d5c830d2-115c-44ef-8ef3-4b0832019a18",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Custom\":{\r\n      \"Criteria\":{\r\n         \"SearchQuery\":{\r\n            \"Key\":{\r\n               \"$EQ\":\"{{CustomKey}}\"\r\n            }\r\n         }\r\n      },\r\n      \"Scope\":{\r\n         \"Fields\":{\r\n            \"Key\":1,\r\n            \"ApplicationId\":1,\r\n            \"Name\":1,\r\n            \"Description\":1,\r\n            \"Creator\":1,\r\n            \"CreationDate\":1,\r\n            \"ModifiedBy\":1,\r\n            \"Text1\":1,\r\n            \"Number1\":1,\r\n            \"Numeric1\":1,\r\n            \"DateTime1\":1\r\n         }\r\n      }\r\n   }\r\n}"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/Read",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"Read"
					]
				},
				"description": "Use the `Read` method to query the data of Custom objects in the database.\n\nNOTE: you must run the `Create - Custom` request before this one so that the `CustomKey` environment variable is set."
			},
			"response": []
		},
		{
			"name": "Read - Custom (Detailed)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d5c830d2-115c-44ef-8ef3-4b0832019a18",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Custom\":{\r\n      \"Criteria\":{\r\n         \"SearchQuery\":{\r\n            \"DateTime1\":{\r\n               \"$RANGE\":[\r\n                  \"2018-01-01\",\r\n                  \"2018-12-31\"\r\n               ]\r\n            }\r\n         }\r\n      },\r\n      \"Scope\":{\r\n         \"Fields\":{\r\n            \"Key\":{\r\n               \"Value\":1,\r\n               \"ID\":1,\r\n               \"Number\":1,\r\n               \"EntityType\":1\r\n            },\r\n            \"ApplicationId\":1,\r\n            \"Name\":1,\r\n            \"Description\":1,\r\n            \"Creator\":{\r\n               \"Key\":{\r\n                  \"Value\":1,\r\n                  \"Uid\":1\r\n               },\r\n               \"DisplayValue\":1\r\n            },\r\n            \"CreationDate\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"ModifiedBy\":{\r\n               \"Key\":{\r\n                  \"Value\":1,\r\n                  \"Uid\":1\r\n               },\r\n               \"DisplayValue\":1\r\n            },\r\n            \"SecAccess\":{\r\n               \"Write\":[\r\n                  {\r\n                     \"Key\":{\r\n                        \"Value\":1,\r\n                        \"Uid\":1\r\n                     },\r\n                     \"DisplayValue\":1\r\n                  }\r\n               ],\r\n               \"Read\":[\r\n                  {\r\n                     \"Key\":{\r\n                        \"Value\":1,\r\n                        \"Uid\":1\r\n                     },\r\n                     \"DisplayValue\":1\r\n                  }\r\n               ]\r\n            },\r\n            \"SecStatus\":{\r\n               \"CanRead\":1,\r\n               \"CanUpdate\":1,\r\n               \"CanDelete\":1\r\n            },\r\n            \"Text1\":1,\r\n            \"Text2\":1,\r\n            \"Text3\":1,\r\n            \"Number1\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"Number2\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"Number3\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"Number4\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"Number5\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"Number6\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"Number7\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"Number8\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"Numeric1\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"Numeric2\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"Numeric3\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"Numeric4\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"DateTime1\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"DateTime2\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"DateTime3\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"DateTime4\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            }\r\n         }\r\n      }\r\n   }\r\n}"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/Read",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"Read"
					]
				},
				"description": "Use the `Read` method to query the data of Custom objects in the database."
			},
			"response": []
		},
		{
			"name": "Read - Custom (All)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d5c830d2-115c-44ef-8ef3-4b0832019a18",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Custom\":{\r\n      \"Criteria\":{\r\n         \"SearchQuery\":{\r\n            \"Text1\":{\r\n               \"$LIKE\":\"%\"\r\n            }\r\n         }\r\n      },\r\n      \"Scope\":{\r\n         \"Fields\":{\r\n            \"Key\":1,\r\n            \"ApplicationId\":1,\r\n            \"Name\":1,\r\n            \"Description\":1,\r\n            \"Creator\":1,\r\n            \"CreationDate\":1,\r\n            \"ModifiedBy\":1,\r\n            \"SecAccess\":1,\r\n            \"SecStatus\":1,\r\n            \"Text1\":1,\r\n            \"Text2\":1,\r\n            \"Text3\":1,\r\n            \"Number1\":1,\r\n            \"Number2\":1,\r\n            \"Number3\":1,\r\n            \"Number4\":1,\r\n            \"Number5\":1,\r\n            \"Number6\":1,\r\n            \"Number7\":1,\r\n            \"Number8\":1,\r\n            \"Numeric1\":1,\r\n            \"Numeric2\":1,\r\n            \"Numeric3\":1,\r\n            \"Numeric4\":1,\r\n            \"DateTime1\":1,\r\n            \"DateTime2\":1,\r\n            \"DateTime3\":1,\r\n            \"DateTime4\":1\r\n         }\r\n      }\r\n   }\r\n}"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/Read",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"Read"
					]
				},
				"description": "Use the `Read` method to query the data of Custom objects in the database."
			},
			"response": []
		},
		{
			"name": "Update - Custom",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6a9661bc-7062-48c7-89d5-2af39e7a8084",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Custom\":{\r\n      \"Data\":{\r\n         \"Key\":\"{{CustomKey}}\",\r\n         \"Name\":\"Updated\",\r\n         \"Description\":\"Test\",\r\n         \"Text1\":\"some text to update\",\r\n         \"Number1\":1,\r\n         \"Numeric1\":2.3,\r\n         \"DateTime1\":\"2018-03-16T13:33:33\"\r\n      }\r\n   }\r\n}"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/Update",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"Update"
					]
				},
				"description": "Use the `Update` method to update a Custom object in the database.\n\nNOTE: you must run the `Create - Custom` request *before* this one so that the `CustomKey` environment variable is set."
			},
			"response": []
		},
		{
			"name": "Delete - Custom",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "497cb4f7-a88b-4a4f-81c5-eee3b0a50c7e",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"if(jsonData.Code === 0) {",
							"    pm.environment.unset(\"CustomKey\");",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Custom\":{\r\n      \"Data\":{\r\n         \"Key\":\"{{CustomKey}}\"\r\n      }\r\n   }\r\n}"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/Delete",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"Delete"
					]
				},
				"description": "Use the `Delete` method to delete a Custom object from the database.\n\nNOTE: you must run the `Create - Custom` request *before* this one so that the `CustomKey` environment variable is set."
			},
			"response": []
		},
		{
			"name": "Metadata - Custom",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f65194a6-1d00-4b45-bd83-f6cfa61a776e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f58ae501-fb89-4229-9f66-589a9979a71a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Schema\":{\r\n      \"Criteria\":{\r\n         \"SearchQuery\":{\r\n            \"AppliesTo\":{\r\n               \"$IN\":[\r\n                  \"Custom\"\r\n               ]\r\n            }\r\n         }\r\n      },\r\n      \"Scope\":{\r\n         \"Fields\":{\r\n            \"Key\":1,\r\n            \"Type\":1,\r\n            \"Name\":1,\r\n            \"Folder\":1\r\n         }\r\n      }\r\n   }\r\n}"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/SchemaRead",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"SchemaRead"
					]
				},
				"description": "Use the `SchemaRead` method to query the structure or metadata of entities in the database."
			},
			"response": []
		},
		{
			"name": "Options - Custom (Generic)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d5c830d2-115c-44ef-8ef3-4b0832019a18",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Custom\":{\r\n      \"Options\":{\r\n         \"Creator\":1,\r\n         \"SecAccess\":{\r\n            \"Write\":1,\r\n            \"Read\":1\r\n         }\r\n      }\r\n   }\r\n}"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/CustomGetFieldOptions",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"CustomGetFieldOptions"
					]
				},
				"description": "Use the `CustomGetFieldOptions` method to retrieve the options for table-valued fields in Custom objects."
			},
			"response": []
		},
		{
			"name": "Options - Custom (Specific Entry)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d5c830d2-115c-44ef-8ef3-4b0832019a18",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Custom\":{\r\n      \"Data\":{\r\n         \"Key\":\"{{CustomKey}}\"\r\n      },\r\n      \"Options\":{\r\n         \"Creator\":{\r\n            \"Key\":{\r\n               \"Value\":1,\r\n               \"Uid\":1\r\n            },\r\n            \"DisplayValue\":1\r\n         },\r\n         \"SecAccess\":{\r\n            \"Write\":[\r\n               {\r\n                  \"Key\":{\r\n                     \"Value\":1,\r\n                     \"Uid\":1\r\n                  }\r\n               }\r\n            ],\r\n            \"Read\":[\r\n               {\r\n                  \"Key\":{\r\n                     \"Value\":1,\r\n                     \"Uid\":1\r\n                  },\r\n                  \"DisplayValue\":1\r\n               }\r\n            ]\r\n         }\r\n      }\r\n   }\r\n}"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/CustomGetFieldOptions",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"CustomGetFieldOptions"
					]
				},
				"description": "Use the `CustomGetFieldOptions` method to retrieve the options for table-valued fields in Custom objects.\n\nNOTE: you must run the `Create - Custom` request *before* this one so that the `CustomKey` environment variable is set."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "26ae2638-3d92-484a-8217-02a38db4fab3",
				"type": "text/javascript",
				"exec": [
					"// This script checks to see if there is a valid token in",
					"// the environment before making any requests to the API",
					"// by calling the TokenValid method. If there is already a",
					"// valid token, it does nothing. If there is no token or if",
					"// the token is not valid, it attempts to obtain a new one",
					"// by calling the Authenticate method, and if successful, ",
					"// saves the token to the environment.",
					"",
					"// Get the API URL and check to make sure it is non-empty",
					"const baseURL = pm.environment.get(\"BaseURL\");",
					"if(!baseURL) {",
					"    console.error(\"The BaseURL environment variable is not set.\");",
					"    return;",
					"}",
					"",
					"// We don't want to do this when calling the Authenticate or",
					"// TokenValid methods, since the purpose of those methods is",
					"// to call the very methods that we're calling below",
					"if(pm.info.requestName.startsWith(\"Authenticate\") || pm.info.requestName === \"TokenValid\") {",
					"    return;",
					"}",
					"",
					"// Check to see if there is already a Token in the environment variable",
					"let token = pm.environment.get(\"Token\");",
					"if(token) {",
					"    // If there is a Token, see if it is still valid",
					"    DoTokenValidRequest(token);",
					"} else {",
					"    // If there is no Token, just call Authenticate",
					"    DoAuthenticateRequest();",
					"}",
					"",
					"//----------------",
					"//Helper Functions",
					"//----------------",
					"",
					"// Calls the TokenValid method",
					"function DoTokenValidRequest(token) {",
					"    console.info(\"Checking to see if token is valid...\");",
					"    // Construct the TokenValid request",
					"    let tokenValidRequest = {",
					"      url: pm.environment.get(\"BaseURL\") + \"/Data.svc/json/TokenValid\",",
					"      method: \"POST\",",
					"      body: {",
					"        mode: \"raw\",",
					"        raw: JSON.stringify({ \"Token\" : pm.environment.get(\"Token\") })",
					"      }",
					"    };",
					"    ",
					"    // Send the TokenValid request to the API",
					"    pm.sendRequest(tokenValidRequest, HandleTokenValidResponse); ",
					"}",
					"",
					"// Handles the TokenValid method response, and calls the ",
					"// Authenticate method if necessary.",
					"function HandleTokenValidResponse(err, res) {",
					"    if(err || !res) {",
					"        // Something went wrong when trying to call the API",
					"        console.error(\"An error occurred when trying to call the TokenValid method.\");",
					"    } else {",
					"        // Check to see if the method was successful",
					"        let jsonData = res.json();",
					"        if(jsonData.Code === 0) {",
					"            console.info(\"The current token is valid.\");",
					"        } else {",
					"            DoAuthenticateRequest();",
					"        }",
					"    }",
					"}",
					"",
					"// Calls the Authenticate method",
					"function DoAuthenticateRequest() {",
					"    // The token is not valid, so we will try to get a new one.",
					"    // Create the Authenticate request body.",
					"    console.info(\"Token is missing or invalid; requesting a new one...\");",
					"    let requestBody = {",
					"        \"Database\": pm.environment.get(\"Database\"),",
					"        \"UID\": pm.environment.get(\"UID\"),",
					"        \"Password\": pm.environment.get(\"Password\")",
					"    };",
					"    ",
					"    // Check to see if the VendorId and AppKey are set, and if",
					"    // they are, add them to the request.",
					"    if(pm.environment.get(\"VendorId\") && pm.environment.get(\"AppKey\")) {",
					"        requestBody.VendorId = pm.environment.get(\"VendorId\");",
					"        requestBody.AppKey = pm.environment.get(\"AppKey\");",
					"    }",
					"    ",
					"    // Create the request object",
					"    let authenticateRequest = {",
					"      url: pm.environment.get(\"BaseURL\") + \"/Data.svc/json/Authenticate\",",
					"      method: \"POST\",",
					"      body: {",
					"        mode: \"raw\",",
					"        raw: JSON.stringify(requestBody)",
					"      }",
					"    };",
					"    ",
					"    // Send the Authenticate request to the API",
					"    pm.sendRequest(authenticateRequest, HandleAuthenticateResponse);    ",
					"}",
					"",
					"// Handles the Authenticate method response and stores the",
					"// new token in the \"Token\" environment variable.",
					"function HandleAuthenticateResponse(err, res) {",
					"    if(err || !res) {",
					"        // The request failed",
					"        console.error(\"An error occurred when trying to call the Authenticate method.\");",
					"    } else {",
					"        // The request succeeded",
					"        let jsonData = res.json();",
					"        if(jsonData.Code === 0) {",
					"            // Store the new token in the environment variable",
					"            // so that we can use it in subsequent requests",
					"            console.info(\"Retrieved new token.\");",
					"            pm.environment.set(\"Token\", jsonData.Data.Token);",
					"        } else {",
					"            // A nonzero Code means that there was an error",
					"            console.error(\"Authentication failed. Check the credentials in the environment.\");",
					"        }",
					"    }",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "2823d2cc-4266-475e-9b7f-18f8163d8358",
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});",
					"pm.test(\"Response Code is 0\", function () {",
					"    var jsonData = pm.response.json();",
					"    pm.expect(jsonData.Code).to.eql(0);",
					"});",
					""
				]
			}
		}
	]
}