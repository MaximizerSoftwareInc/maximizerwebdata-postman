{
	"info": {
		"_postman_id": "14418177-4a58-4a7d-a435-6b910f5f5c88",
		"name": "Case",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create - Case",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1726244e-4dab-4785-92aa-d3dbb44f0fff",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"if(jsonData && jsonData.Case && jsonData.Case.Data) {   ",
							"    pm.environment.set(\"CaseKey\", jsonData.Case.Data.Key);",
							"   ",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Case\":{\r\n      \"Data\":{\r\n         \"Key\":null,\r\n         \"CaseNumber\":null,\r\n         \"Subject\":\"Creating a Case from Postman\",\r\n         \"Description\":\"Description of a Case created from Postman\",\r\n         \"AbEntryKey\":\"{{AbEntryKey}}\",\r\n         \"Priority\":57900,\r\n         \"Severity\":57900\r\n      }\r\n   }\r\n}"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/Create",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"Create"
					]
				},
				"description": "Use the `Create` method to create a Case object in the database.\n\nNOTE: You must have run the `Create - AbEntry (Company)` request *before* running this one so that the `AbEntryKey` environment variable is set."
			},
			"response": []
		},
		{
			"name": "Create - Case (All)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1726244e-4dab-4785-92aa-d3dbb44f0fff",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"if(jsonData && jsonData.Case && jsonData.Case.Data) {   ",
							"    pm.environment.set(\"CaseKey\", jsonData.Case.Data.Key);",
							"   ",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Case\":{\r\n      \"Data\":{\r\n         \"Key\":null,\r\n         \"CaseNumber\":null,\r\n         \"Subject\":\"Creating a Case from Postman\",\r\n         \"Description\":\"Description of a Case created from Postman\",\r\n         \"AbEntryKey\":\"{{AbEntryKey}}\",\r\n         \"ContactKey\":\"{{ContactKey}}\",\r\n         \"AssignedTo\":\"VXNlcglNQVNURVI=\",\r\n         \"Priority\":57900,\r\n         \"Severity\":57900,\r\n         \"LastModifyDate\":\"2018-04-30\",\r\n         \"CreationDate\":\"2018-04-23\",\r\n         \"ResolvedDate\":\"2019-04-23\",\r\n         \"ResolvedBy\":\"VXNlcglNQVNURVI=\",\r\n         \"Owner\":\"VXNlcglNQVNURVI=\",\r\n         \"FollowUpDate\":\"2018-06-23\",\r\n         \"ModifiedBy\":\"VXNlcglNQVNURVI=\",\r\n         \"Creator\":\"VXNlcglNQVNURVI=\",\r\n         \"Type\":\"7\",\r\n         \"Reason\":\"7\",\r\n         \"Origin\":\"1\",\r\n         \"Queue\":\"2\",\r\n         \"Status\":\"57993\",\r\n         \"Category\":[\r\n            \"15\"\r\n         ],\r\n         \"Product\":[\r\n            \"20\"\r\n         ]\r\n      }\r\n   }\r\n}"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/Create",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"Create"
					]
				},
				"description": "Use the `Create` method to create a Case Object in the database.\n\nNOTE: You must have run _both_ the `Create - AbEntry (Company)` and `Create - AbEntry (Contact)` requests *before* running this one so that the `AbEntryKey` and `ContactKey` environment variables are set."
			},
			"response": []
		},
		{
			"name": "Read - Case",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d5c830d2-115c-44ef-8ef3-4b0832019a18",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Case\":{\r\n      \"Criteria\":{\r\n         \"SearchQuery\":{\r\n            \"Subject\":{\r\n               \"$LIKE\":\"%\"\r\n            }\r\n         }\r\n      },\r\n      \"Scope\":{\r\n         \"Fields\":{\r\n            \"Key\":1,\r\n            \"CaseNumber\":1,\r\n            \"Subject\":1,\r\n            \"Description\":1,\r\n            \"AssignedTo\":1,\r\n            \"Priority\":1,\r\n            \"Severity\":1,\r\n            \"Type\":1,\r\n            \"Status\":1\r\n         }\r\n      }\r\n   }\r\n}"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/Read",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"Read"
					]
				},
				"description": "Use the `Read` method to query the data of Case objects in the database."
			},
			"response": []
		},
		{
			"name": "Read - Case (Detailed)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d5c830d2-115c-44ef-8ef3-4b0832019a18",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{  \r\n   \"Token\":\"{{Token}}\",\r\n   \"Case\":{  \r\n      \"Criteria\":{  \r\n         \"SearchQuery\":{  \r\n\t\t\t\"Status\": {\r\n\t\t\t\t\"$IN\": [\r\n\t\t\t\t\t\"57998\"\r\n\t\t\t\t]\r\n\t\t\t}\r\n         }\r\n      },\r\n      \"Scope\":{  \r\n         \"Fields\":{  \r\n            \"Key\":{\r\n               \"Value\":1,\r\n               \"ID\":1,\r\n               \"Number\":1,\r\n               \"EntityType\":1\r\n            },\r\n            \"CaseNumber\":1,\r\n            \"Subject\":1,\r\n            \"Description\":1,\r\n            \"AssignedTo\":{\r\n              \"Key\":{\r\n                 \"Value\":1,\r\n                 \"Uid\":1\r\n              },\r\n              \"DisplayValue\":1\r\n           },\r\n            \"Priority\":{  \r\n               \"Key\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"Severity\":{  \r\n               \"Key\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"ResolvedDate\":{\r\n               \"Value\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"ResolvedBy\":{\r\n              \"Key\":{\r\n                 \"Value\":1,\r\n                 \"Uid\":1\r\n              },\r\n              \"DisplayValue\":1\r\n           },\r\n            \"Owner\":{\r\n              \"Key\":{\r\n                 \"Value\":1,\r\n                 \"Uid\":1\r\n              },\r\n              \"DisplayValue\":1\r\n           },\r\n            \"Type\":{  \r\n               \"Key\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"Reason\":{  \r\n               \"Key\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"Origin\":{  \r\n               \"Key\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"Queue\":{  \r\n               \"Key\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"Status\":{  \r\n               \"Key\":1,\r\n               \"DisplayValue\":1\r\n            },\r\n            \"Category\":{  \r\n               \"DisplayValue\":1\r\n            },\r\n            \"Product\":{  \r\n               \"DisplayValue\":1\r\n            }\r\n         }\r\n      }\r\n   }\r\n}\r\n"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/Read",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"Read"
					]
				},
				"description": "Use the `Read` method to query the data of Case objects in the database."
			},
			"response": []
		},
		{
			"name": "Read - Case (All)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d5c830d2-115c-44ef-8ef3-4b0832019a18",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Case\":{\r\n      \"Criteria\":{\r\n         \"SearchQuery\":{\r\n            \"CreationDate\":{\r\n               \"$RANGE\":[\r\n                  \"2018-01-01\",\r\n                  \"2018-12-31\"\r\n               ]\r\n            }\r\n         }\r\n      },\r\n      \"Scope\":{\r\n         \"Fields\":{\r\n            \"Key\":1,\r\n            \"CaseNumber\":1,\r\n            \"Subject\":1,\r\n            \"Description\":1,\r\n            \"AssignedTo\":1,\r\n            \"Priority\":1,\r\n            \"Severity\":1,\r\n            \"ResolvedDate\":1,\r\n            \"ResolvedBy\":1,\r\n            \"Owner\":1,\r\n            \"FollowUpDate\":1,\r\n            \"LastModifyDate\":1,\r\n            \"ModifiedBy\":1,\r\n            \"CreationDate\":1,\r\n            \"Creator\":1,\r\n            \"Type\":1,\r\n            \"Reason\":1,\r\n            \"Origin\":1,\r\n            \"Queue\":1,\r\n            \"Status\":1,\r\n            \"Category\":1,\r\n            \"Product\":1\r\n         }\r\n      }\r\n   }\r\n}"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/Read",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"Read"
					]
				},
				"description": "Use the `Read` method to query the data of Case objects in the database."
			},
			"response": []
		},
		{
			"name": "Update - Case",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "77b01c0a-2d43-42e8-bbb0-f0887f9d02e7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Case\":{\r\n      \"Data\":{\r\n         \"Key\":\"{{CaseKey}}\",\r\n         \"Subject\":\"Updating a Case from Postman\",\r\n         \"Description\":\"Updated a Case created from Postman\",\r\n         \"Priority\":57900,\r\n         \"Severity\":57900\r\n      }\r\n   }\r\n}"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/Update",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"Update"
					]
				},
				"description": "Use the `Update` method to modify an existing Case object in the database.\n\nNOTE: You must have run the `Create - Case` request *before* running this one so that the `CaseKey` environment variable is set."
			},
			"response": []
		},
		{
			"name": "Delete - Case",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "13894e19-c6da-4c8d-a37f-883100aba6b6",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"if(jsonData.Code === 0) {",
							"    pm.environment.unset(\"CaseKey\");",
							"}"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f58ae501-fb89-4229-9f66-589a9979a71a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Case\":{\r\n      \"Data\":{\r\n         \"Key\":\"{{CaseKey}}\"\r\n      }\r\n   }\r\n}"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/Delete",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"Delete"
					]
				},
				"description": "Use the `Delete` method to delete a Case from the database.\n\nNOTE: You must run the `Create - Case` request *before* running this one so that the `CaseKey` environment variable is set."
			},
			"response": []
		},
		{
			"name": "Metadata - Case",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f65194a6-1d00-4b45-bd83-f6cfa61a776e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f58ae501-fb89-4229-9f66-589a9979a71a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Schema\":{\r\n      \"Criteria\":{\r\n         \"SearchQuery\":{\r\n            \"AppliesTo\":{\r\n               \"$IN\":[\r\n                  \"Case\"\r\n               ]\r\n            }\r\n         }\r\n      },\r\n      \"Scope\":{\r\n         \"Fields\":{\r\n            \"Key\":1,\r\n            \"Type\":1,\r\n            \"Name\":1,\r\n            \"Folder\":1\r\n         }\r\n      }\r\n   }\r\n}"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/SchemaRead",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"SchemaRead"
					]
				},
				"description": "Use the `SchemaRead` method to query the structure or metadata of entities in the database."
			},
			"response": []
		},
		{
			"name": "Options - Case (Generic)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d5c830d2-115c-44ef-8ef3-4b0832019a18",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Case\":{\r\n      \"Options\":{\r\n         \"Subject\":1,\r\n         \"AssignedTo\":1,\r\n         \"Priority\":1,\r\n         \"Severity\":1,\r\n         \"ResolvedBy\":1,\r\n         \"Owner\":1,\r\n         \"ModifiedBy\":1,\r\n         \"Creator\":1,\r\n         \"Type\":1,\r\n         \"Reason\":1,\r\n         \"Origin\":1,\r\n         \"Queue\":1,\r\n         \"Status\":1,\r\n         \"Category\":1,\r\n         \"Product\":1\r\n      }\r\n   }\r\n}"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/CaseGetFieldOptions",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"CaseGetFieldOptions"
					]
				},
				"description": "Use the `CaseGetFieldOptions` method to retrieve the options for table-valued fields of the Case object."
			},
			"response": []
		},
		{
			"name": "Options - Case (Specific Entry)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d5c830d2-115c-44ef-8ef3-4b0832019a18",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Case\":{\r\n      \"Data\":{\r\n         \"Key\":\"{{CaseKey}}\"\r\n      },\r\n      \"Options\":{\r\n         \"Subject\":1,\r\n         \"AssignedTo\":{\r\n            \"Key\":1,\r\n            \"DisplayValue\":1\r\n         },\r\n         \"Priority\":{\r\n            \"Key\":1,\r\n            \"DisplayValue\":1\r\n         },\r\n         \"Severity\":{\r\n            \"Key\":1,\r\n            \"DisplayValue\":1\r\n         },\r\n         \"ResolvedBy\":{\r\n            \"Key\":1,\r\n            \"DisplayValue\":1\r\n         },\r\n         \"Owner\":{\r\n            \"Key\":1,\r\n            \"DisplayValue\":1\r\n         },\r\n         \"ModifiedBy\":{\r\n            \"Key\":1,\r\n            \"DisplayValue\":1\r\n         },\r\n         \"Creator\":{\r\n            \"Key\":1,\r\n            \"DisplayValue\":1\r\n         },\r\n         \"Type\":{\r\n            \"Key\":1,\r\n            \"DisplayValue\":1\r\n         },\r\n         \"Reason\":{\r\n            \"Key\":1,\r\n            \"DisplayValue\":1\r\n         },\r\n         \"Origin\":{\r\n            \"Key\":1,\r\n            \"DisplayValue\":1\r\n         },\r\n         \"Queue\":{\r\n            \"Key\":1,\r\n            \"DisplayValue\":1\r\n         },\r\n         \"Status\":{\r\n            \"Key\":1,\r\n            \"DisplayValue\":1\r\n         },\r\n         \"Category\":{\r\n            \"Key\":1,\r\n            \"DisplayValue\":1\r\n         },\r\n         \"Product\":{\r\n            \"Key\":1,\r\n            \"DisplayValue\":1\r\n         }\r\n      }\r\n   }\r\n}"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/CaseGetFieldOptions",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"CaseGetFieldOptions"
					]
				},
				"description": "Use the `CaseGetFieldOptions` method to retrieve the options for table-valued fields of the Case object."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "19b79665-764a-4d96-ac56-5f47c492a620",
				"type": "text/javascript",
				"exec": [
					"// This script checks to see if there is a valid token in",
					"// the environment before making any requests to the API",
					"// by calling the TokenValid method. If there is already a",
					"// valid token, it does nothing. If there is no token or if",
					"// the token is not valid, it attempts to obtain a new one",
					"// by calling the Authenticate method, and if successful, ",
					"// saves the token to the environment.",
					"",
					"// Get the API URL and check to make sure it is non-empty",
					"const baseURL = pm.environment.get(\"BaseURL\");",
					"if(!baseURL) {",
					"    console.error(\"The BaseURL environment variable is not set.\");",
					"    return;",
					"}",
					"",
					"// We don't want to do this when calling the Authenticate or",
					"// TokenValid methods, since the purpose of those methods is",
					"// to call the very methods that we're calling below",
					"if(pm.info.requestName.startsWith(\"Authenticate\") || pm.info.requestName === \"TokenValid\") {",
					"    return;",
					"}",
					"",
					"// Check to see if there is already a Token in the environment variable",
					"let token = pm.environment.get(\"Token\");",
					"if(token) {",
					"    // If there is a Token, see if it is still valid",
					"    DoTokenValidRequest(token);",
					"} else {",
					"    // If there is no Token, just call Authenticate",
					"    DoAuthenticateRequest();",
					"}",
					"",
					"//----------------",
					"//Helper Functions",
					"//----------------",
					"",
					"// Calls the TokenValid method",
					"function DoTokenValidRequest(token) {",
					"    console.info(\"Checking to see if token is valid...\");",
					"    // Construct the TokenValid request",
					"    let tokenValidRequest = {",
					"      url: pm.environment.get(\"BaseURL\") + \"/Data.svc/json/TokenValid\",",
					"      method: \"POST\",",
					"      body: {",
					"        mode: \"raw\",",
					"        raw: JSON.stringify({ \"Token\" : pm.environment.get(\"Token\") })",
					"      }",
					"    };",
					"    ",
					"    // Send the TokenValid request to the API",
					"    pm.sendRequest(tokenValidRequest, HandleTokenValidResponse); ",
					"}",
					"",
					"// Handles the TokenValid method response, and calls the ",
					"// Authenticate method if necessary.",
					"function HandleTokenValidResponse(err, res) {",
					"    if(err || !res) {",
					"        // Something went wrong when trying to call the API",
					"        console.error(\"An error occurred when trying to call the TokenValid method.\");",
					"    } else {",
					"        // Check to see if the method was successful",
					"        let jsonData = res.json();",
					"        if(jsonData.Code === 0) {",
					"            console.info(\"The current token is valid.\");",
					"        } else {",
					"            DoAuthenticateRequest();",
					"        }",
					"    }",
					"}",
					"",
					"// Calls the Authenticate method",
					"function DoAuthenticateRequest() {",
					"    // The token is not valid, so we will try to get a new one.",
					"    // Create the Authenticate request body.",
					"    console.info(\"Token is missing or invalid; requesting a new one...\");",
					"    let requestBody = {",
					"        \"Database\": pm.environment.get(\"Database\"),",
					"        \"UID\": pm.environment.get(\"UID\"),",
					"        \"Password\": pm.environment.get(\"Password\")",
					"    };",
					"    ",
					"    // Check to see if the VendorId and AppKey are set, and if",
					"    // they are, add them to the request.",
					"    if(pm.environment.get(\"VendorId\") && pm.environment.get(\"AppKey\")) {",
					"        requestBody.VendorId = pm.environment.get(\"VendorId\");",
					"        requestBody.AppKey = pm.environment.get(\"AppKey\");",
					"    }",
					"    ",
					"    // Create the request object",
					"    let authenticateRequest = {",
					"      url: pm.environment.get(\"BaseURL\") + \"/Data.svc/json/Authenticate\",",
					"      method: \"POST\",",
					"      body: {",
					"        mode: \"raw\",",
					"        raw: JSON.stringify(requestBody)",
					"      }",
					"    };",
					"    ",
					"    // Send the Authenticate request to the API",
					"    pm.sendRequest(authenticateRequest, HandleAuthenticateResponse);    ",
					"}",
					"",
					"// Handles the Authenticate method response and stores the",
					"// new token in the \"Token\" environment variable.",
					"function HandleAuthenticateResponse(err, res) {",
					"    if(err || !res) {",
					"        // The request failed",
					"        console.error(\"An error occurred when trying to call the Authenticate method.\");",
					"    } else {",
					"        // The request succeeded",
					"        let jsonData = res.json();",
					"        if(jsonData.Code === 0) {",
					"            // Store the new token in the environment variable",
					"            // so that we can use it in subsequent requests",
					"            console.info(\"Retrieved new token.\");",
					"            pm.environment.set(\"Token\", jsonData.Data.Token);",
					"        } else {",
					"            // A nonzero Code means that there was an error",
					"            console.error(\"Authentication failed. Check the credentials in the environment.\");",
					"        }",
					"    }",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "d48bf489-896b-4240-920f-e0e0385179e8",
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});",
					"pm.test(\"Response Code is 0\", function () {",
					"    var jsonData = pm.response.json();",
					"    pm.expect(jsonData.Code).to.eql(0);",
					"});",
					""
				]
			}
		}
	]
}